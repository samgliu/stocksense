name: Deploy Lambda Functions

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'terraform/lambda/**'
      - 'terraform/*.tf'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        function:
          - name: scraper
            runtime: node
          - name: gcs
            runtime: python
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        if: matrix.function.runtime == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Python
        if: matrix.function.runtime == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        working-directory: terraform/lambda/${{ matrix.function.name }}
        run: |
          if [[ "${{ matrix.function.runtime }}" == "node" ]]; then
            npm install
          elif [[ "${{ matrix.function.runtime }}" == "python" ]]; then
            pip install -r requirements.txt -t dist/
          fi

      - name: Build Lambda
        working-directory: terraform/lambda/${{ matrix.function.name }}
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-${{ matrix.function.name }}
          path: terraform/lambda/${{ matrix.function.name }}/dist/index.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: terraform/lambda/

      - name: Move Artifacts
        run: |
          mv terraform/lambda/lambda-scraper/index.zip terraform/lambda/scraper/dist/index.zip
          mv terraform/lambda/lambda-gcs/index.zip terraform/lambda/gcs/dist/index.zip

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure Terraform credentials
        run: |
          mkdir -p ~/.terraform.d
          echo '{"credentials": {"app.terraform.io": {"token": "${{ secrets.TF_API_TOKEN }}"}}}' > ~/.terraform.d/credentials.tfrc.json

      - name: Set Terraform Variables
        working-directory: terraform
        run: |
          echo 'google_api_key = "${{ secrets.GOOGLE_API_KEY }}"' > lambda.auto.tfvars
          echo 'google_cx_id = "${{ secrets.GOOGLE_CX_ID }}"' >> lambda.auto.tfvars

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve
