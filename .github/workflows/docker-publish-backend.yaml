name: Publish Backend Docker Image

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  test:
    name: Run Pytest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt', 'backend/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests
        working-directory: ./backend
        run: |
          PYTHONPATH=. pytest --disable-warnings

  build-and-push:
    name: Build & Push Backend Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push multi-platform image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/stocksense-backend:latest
          platforms: linux/amd64,linux/arm64

  restart-backend:
    name: Restart K3s Backend Deployment
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Restart backend deployment via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ORACLE_SSH_HOST }}
          username: ${{ secrets.ORACLE_SSH_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            sudo k3s kubectl rollout restart deployment backend -n default
